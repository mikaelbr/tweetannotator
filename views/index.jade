extends layout

block content
  
  div.navbar.navbar-fixed-top
    div.navbar-inner
      a.brand(href='/#') Sentiment Annotator
      ul.nav
        li#annotate-menu
          a(href='/#') Annotate
        li#list-menu
          a(href='/#list') List
        li
          a(href='/tweets') JSON Data

  div.container
    article.main.span8

      form
        fieldset
          div.input-prepend
            span.add-on @
            input#prependedInput.span2(type='text', placeholder='Annotator Identifier Name')
          //- label.checkbox
          //-   span.checkbox-text Annotated here before with this identifier?
          //-   input(type='checkbox', checked='checked') 


      ul#annotations.annotation-list

  script(id='tweet-item', type='text/html')
    <div class="body">
    <p><%= text %></p>
    </div>
    <div class="buttons">
    <a class="objective btn btn-info" href="#">Objective</a>
    <a class="positive btn btn-success" href="#">Positive</a>
    <a class="negative btn btn-danger" href="#">Negative</a>
    </div>

  script(src="js/vendor/require.js")
  script
    require(['backbone', 'js/app'], function (Backbone, App) {
      var userModel = new App.Models.User()
        , userView = new App.Views.User({ model: userModel })
        , annotateView = new App.Views.AnnotateView( { collection: new App.Collections.Tweets(), user: userView})
        , listView = new App.Views.ListView( { collection: new App.Collections.Tweets(), user: userView})
        , menuAnnotate = $('#annotate-menu')
        , menuList = $('#list-menu');

      userModel.fetch();

      annotateView.nextTweet();
      var AppRoutes = Backbone.Router.extend({
        routes: {
          '': 'index',
          'list': 'list'
        },
        index: function() {
          annotateView.render();
          menuAnnotate.addClass('active').siblings().removeClass('active');

          if (!annotateView.$el.find('li:first .buttons').is(':visible')) {
            annotateView.nextTweet();
          }
        },
        list: function(query, page) {
          listView.collection.fetch();
          menuList.addClass('active').siblings().removeClass('active');
        }
      });

      new AppRoutes;
      Backbone.history.start();
    });